version: "3"

services:
  traefik:
    image: traefik:2.2
    container_name: traefik
    restart: unless-stopped
    ports: 
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml
      - ./traefik_dynamic.toml:/traefik_dynamic.toml
      - ./acme.json:/acme.json
    networks: 
      - web
  
  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  sjuben:
    image: spark156/money-wasted-on-swap-fiets-counter
    container_name: sjuben
    restart: unless-stopped
    networks: 
      - web
    labels:
      - traefik.http.routers.sjuben.rule=Host(`sjuben.lucabergman.nl`)
      - traefik.http.routers.sjuben.tls=true
      - traefik.http.routers.sjuben.tls.certresolver=lets-encrypt
      - traefik.port=80

  bhoi-domeinbeschrijving:
    image: spark156/hboi-domeinbeschrijving
    container_name: hboi-domeinbeschrijving
    restart: unless-stopped
    networks:
      - web
    labels:
      - traefik.http.routers.hboi.rule=Host(`hboi.lucabergman.nl`)
      - traefik.http.routers.hboi.tls=true
      - traefik.http.routers.hboi.tls.certresolver=lets-encrypt
      - traefik.port=80

  cv:
    image: spark156/curriculum-vitea
    restart: unless-stopped
    networks:
      - web
    labels:
      - traefik.http.routers.cv.rule=Host(`cv.lucabergman.nl`)
      - traefik.http.routers.cv.tls=true
      - traefik.http.routers.cv.tls.certresolver=lets-encrypt
      - traefik.port=80

  portfolio-backend:
    image: spark156/portfolio-backend
    restart: unless-stopped
    depends_on:
      - portfolio-database
    environment: 
      DATABASE_URL: "postgres://{username}:{password}@postgres:5432/{database (same as username)}" # replace username and password including brackets with username and password
      JWT_SECRET: "secret" # replace secret with your own secret
    volumes:
      - portfolio-backend:/usr/src/app
    networks:
      - web
    labels:
      traefik.http.routers.portfolio-backend.tls: true
      traefik.http.routers.portfolio-backend.tls.certresolver: lets-encrypt
      traefik.http.routers.portfolio-backend.rule: Host(`www.lucabergman.nl`)
      traefik.http.routers.portfolio-backend.rule: PathPrefix(`/api/v1`)
      traefik.http.middlewares.backendpathstrip.stripprefix.prefixes: /api/v1
      traefik.http.routers.portfolio-backend.middlewares: backendpathstrip@docker
      traefik.http.services.portfolio-backend.loadbalancer.server.port: 3000

  portfolio-database:
    image: postgres
    environment:
      POSTGRES_USER: portfolio # replace with your own username and make sure it matches the database and username vars in database backend
      POSTGRES_PASSWORD: "password" # replace with your own password and make sure it matches with the password on portfolio-backend
    volumes:
      - portfolio-database:/var/lib/postgresql/data
  
  portfolio-frontend:
    image: spark156/portfolio-frontend
    environment:
      HOST: https://www.lucabergman.nl
    depends_on: 
      - portfolio-backend
    networks:
      - web
    labels: 
      traefik.enable: true
      traefik.http.routers.portfolio-frontend.rule: Host(`www.lucabergman.nl`)
      traefik.http.routers.portfolio-frontend.entrypoints: web
      traefik.http.services.portfolio-frontend.loadbalancer.server.port: 3000
      traefik.http.routers.portfolio-frontend.tls: true
      traefik.http.routers.portfolio-frontend.tls.certresolver: lets-encrypt
      

networks:
  web: 

volumes:
  portfolio-database:
  portfolio-backend: